% % Clear
close all;
clear;
clc;
% % Main Program
img = input('sample.png');
kernel = strel('square', 5); 
blur = opening(img, kernel); 
kmean = kmeans(blur, 4);
gray = grayscale(kmean);
kernel = 
blur = opening(gray, kernel); 

% % Functions
function img2mesh(img)
    [x, y] = size(img); 
    X = 1 : x; 
    Y = 1 : y; 
    [x, y] = meshgrid(Y, X); 
    figure; 
    mesh(x, y, img); 
end

function res = kmeans(img, n) 
    [l, c] = imsegkmeans(img, n); 
    res = label2rgb(l, im2double(c)); 
    figure; 
    imshow(res); 
end 

function res = erode(img, kernel) 
    res = imerode(img, kernel); 
    figure; 
    imshow(res);
end 

function res = dilate(img, kernel)
    res = imdilate(img, kernel); 
    figure; 
    imshow(res);
end

function res = opening(img, kernel)
    res = imopen(img, kernel); 
    figure; 
    imshow(res); 
end 

function res = closing(img, kernel) 
    res = imclose(img, kernel); 
    figure; 
    imshow(res); 
end

function res = openrecon(img, kernel)
    ie = imerode(img, kernel); 
    res = imreconstruct(ie, img); 
    figure; 
    imshow(res);
end 

function res = closerecon(img, kernel) 
    iobrd = imdilate(img, kernel);
    iobrcbr = imreconstruct(imcomplement(iobrd), imcomplement(img));
    res = imcomplement(iobrcbr);
    figure; 
    imshow(res); 
end

function res = eqhist(img) 
    res = histeq(img);
    figure; 
    imshow(res);
end 

function res = threshold(img, val) 
    res = img < val; 
    figure;
    imshow(res);
end

function res = grayscale(img) 
    res = img(:, :, 3);
    figure;
    imshow(res);
end

function res = applymask(img, mask)
    res = labeloverlay(img, mask);
    figure;
    imshow(res); 
end

function res = input(name)
    res = imread(name);
    figure; 
    imshow(res); 
end